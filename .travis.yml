sudo: required
dist: trusty

language: cpp

compiler:
    - gcc
    - clang

os:
    - linux
    - osx

env:
    global:
        # Skip user-input
        - FORCE_CLEAN=yes
        - FORCE_INSTALL=yes
        # Compiler versions
        - GCC_VERSION=4.9
        #- CLANG_VERSION=3.6

matrix:
    exclude:
        - os: osx
          compiler: gcc

addons:
    apt:
        packages:
            - gcc-4.9
            - g++-4.9
            - libssl-dev
            - libssl1.0.0
            - libminiupnpc-dev
            - doxygen
            - graphviz
            - libboost-program-options1.58-dev
            - libboost-filesystem1.58-dev
            - libboost-system1.58-dev
            - libboost-date-time1.58-dev
            - libboost-chrono1.58-dev
            - libboost-log1.58-dev
            - libboost-thread1.58-dev
            - libboost-regex1.58-dev
            - libboost-test1.58-dev
        sources:
            - ubuntu-toolchain-r-test
            - sourceline: 'ppa:kojoley/boost'

before_install:
    - git submodule update --init --recursive
    - if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then brew update; fi

install:
    - if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then brew upgrade boost; fi
    - if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then brew install openssl miniupnpc doxygen graphviz; fi

before_script:
    - if [ "$CC" = "gcc" ]; then export CC=gcc-${GCC_VERSION}; fi
    - if [ "$CXX" = "g++" ]; then export CXX=g++-${GCC_VERSION}; fi
    #- if [ "$CC" = "clang" ]; then export CC=clang-${CLANG_VERSION}; fi
    #- if [ "$CXX" = "clang++" ]; then export CXX=clang-${CLANG_VERSION}; fi

script: make clean && make -j2 all-options && make -j2 tests && make doxygen && make install-resources

notifications:
    email: false
    irc:
        channels: "chat.freenode.net#kovri-dev"
        nick: kovri
        template: "%{result} | %{repository}#%{build_number} (%{commit} : %{author}) | Build details : %{build_url}"
